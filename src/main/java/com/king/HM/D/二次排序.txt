二次排序？？？ 如A列结果相同，则看B列.   order by a ,b
==原始数据==
姓名 数学成绩    英语成绩
a	87	98
b	99	94
c	22	89
d	53	86
e	64	92
f	22	86
g	54	82
h	67	90
--------------------------------------
输出结果要求:
格式:
数学成绩    英语成绩
参考结果:
f 22 86
c 22 89
d 53 86
g 54 82
e 64 92
h 67 90
a 87 98
b 99 94



--------------------------------------------------------------

分析: 1. shuffle阶段是可以自动按键排序的，但默认情况下，只能对一个数据进行排序。   -> 自定义键
           序列化， 比较
     2. 这里有两个列(或更多），是否可以自定义一个键， 它可以按两个列排序。
     3. 回顾一下mapreduce的对键值的要求：  1. 键值都要能序列化   2. 键要能比较.

--------------------------------------------------------
过程解析:

---------------<k1,v1>
<0,a	87	98>
<7,b	99	94>
<11,c	22	89>
………………………………其它值省略

---------------------mapper阶段
String[] split = value.toString().split("\t");
String name=split[0];
long first = Long.parseLong(split[1]);
long second = Long.parseLong(split[2]);
// 在自定义类中进行比较
NewKey newKey = new NewKey(first, second);        //  提供比较算法, 如何序列化
context.write(newKey,   new Text(  name ) );  //后面可以利用shuffle对Newkey进行排序了.
输出<k2,v2> k2:学号姓名   v2:成绩
<87	98,a>
<99	94,b>
<22	89,c>
………………其它值省略

-----经过Shuffle，分区，按NewKey*****分组排序,<NewKey,{value集合}>
<22 86，{f}>
<22 89,{c}>
<53 86,{d}>


---------------Reduce:reduce()
1. 简单输出分析
Iterator its=values.iterator();
while(   its.hasNext() ){
		Text t= (Text) its.next();
		context.write(t , key);
}
----------------
====<k3,v3>
f 22 86
c 22 89
d 53 86
g 54 82
e 64 92
h 67 90
a 87 98
b 99 94

TODO:  2. 所有的统计排序分析输出
f 22 86  84 1 1
c 22 89  80 1 2
d 53 86  79 2 3
g 54 82
e 64 92
h 67 90
a 87 98
b 99 94
